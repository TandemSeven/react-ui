{"version":3,"sources":["webpack:///./packages/forms/src/button/button.js","webpack:///./packages/forms/src/button/index.mdx"],"names":["Button","props","_this","_classCallCheck","this","_getPrototypeOf","call","bind","_assertThisInitialized","React","Component","e","arguments","length","undefined","buttonData","handleClick","rel","tabIndex","_this$props","ariaControls","disabled","children","className","href","mode","size","style","target","title","type","propsForBoth","trim","join","data-mode","data-size","onClick","propsForLink","_objectSpread","propsForButton","aria-controls","button","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","defaultProps","MDXContent","_possibleConstructorReturn","layout","components","_objectWithoutProperties","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","docz__WEBPACK_IMPORTED_MODULE_2__","of","parentName"],"mappings":"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","file":"static/js/packages-forms-src-button-index.361003cb.js","sourcesContent":["// Dependencies.\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// Utility methods.\nimport {\n  bind,\n  trim\n} from '@t7/utils'\n\n// Define class.\nclass Button extends React.Component {\n  constructor (props) {\n    // Pass `props` into scope.\n    super(props)\n\n    // Bind context.\n    bind(this)\n  }\n\n  // Button click.\n  handleClick (e = {}) {\n    // Props\n    const { buttonData } = this.props\n\n    // Callback.\n    this.props.handleClick(e, buttonData)\n  }\n\n  // Render method.\n  render () {\n    // Props.\n    const {\n      ariaControls,\n      disabled,\n      children,\n      className,\n      href,\n      mode,\n      size,\n      style,\n      target,\n      title,\n      type\n    } = this.props\n\n    // Events.\n    const { handleClick } = this\n\n    // Set in conditional.\n    let rel\n    let tabIndex\n\n    // Not disabled?\n    if (!disabled) {\n      tabIndex = 0\n\n      // External link?\n      if (href && target) {\n        rel = 'noopener noreferrer'\n      }\n    }\n\n    // Props for both.\n    const propsForBoth = {\n      children,\n      disabled,\n      tabIndex,\n      title,\n\n      // Class name.\n      className: (\n        trim(\n          [\n            't7-button',\n            className\n          ].join(' ')\n        )\n      ),\n\n      // Mode.\n      'data-mode': mode,\n\n      // Size.\n      'data-size': size,\n\n      // Events.\n      onClick: (\n        disabled\n          ? null\n          : handleClick\n      ),\n\n      // Style.\n      style: style\n    }\n\n    // Props for link.\n    const propsForLink = {\n      ...propsForBoth,\n      rel,\n      href: (\n        disabled\n          ? null\n          : href\n      ),\n      target: (\n        disabled\n          ? null\n          : target\n      )\n    }\n\n    // Props for button.\n    const propsForButton = {\n      ...propsForBoth,\n      type,\n      'aria-controls': ariaControls\n    }\n\n    // Presuppose `<button>`.\n    let button = (\n      <button\n        {...propsForButton}\n      />\n    )\n\n    // Is it a link?\n    if (href) {\n      // Build link.\n      button = (\n        <a\n          {...propsForLink}\n        />\n      )\n    }\n\n    // Expose the UI.\n    return button\n  }\n}\n\n// Validation.\nButton.propTypes = {\n  ariaControls: PropTypes.string,\n  buttonData: PropTypes.any,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  mode: PropTypes.string,\n  size: PropTypes.string,\n  style: PropTypes.object,\n  target: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n\n  // Events.\n  handleClick: PropTypes.func\n}\n\n// Prop defaults.\nButton.defaultProps = {\n  disabled: false,\n  mode: 'default',\n  size: 'default',\n  type: 'button',\n\n  // Events.\n  handleClick: () => {}\n}\n\n// Export.\nexport default Button\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Button from './button'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"t7formsbutton\"}}>{`@t7/forms/button`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Button} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { Button } from '@t7/forms'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Button>`}</MDXTag>{` component can be used as a form element (typical use case) or as a link.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Below is an example of all the props that it can use, though some are mutually exclusive. For instance, you could specify the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{` of button as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`submit`}</MDXTag>{`, but wouldn't set the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{` of a link.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`By passing `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`href`}</MDXTag>{`, the component will be used as an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<a>`}</MDXTag>{` link, otherwise a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<button>`}</MDXTag>{` tag will be generated.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// Default: none.\nconst ariaControls = 'string'\n\n// Default: none.\nconst children = 'string' // or element(s)\n\n// Default: none.\nconst disabled = true\n\n// Default: none.\nconst href = 'https://example.com/'\n\n// Default: \"default\".\nconst mode = 'info | negative | positive | warn'\n\n// Default: \"default\".\nconst size = 'small | big'\n\n// Default: none.\nconst target = 'string'\n\n// Default: none.\nconst title = 'string'\n\n// Default: \"button\".\nconst type = 'submit | reset'\n\n/*\n  Data you might want to associate\n  to the button, to be reported via\n  callback when/if it is clicked.\n*/\nconst buttonData = {\n  foo: 'bar'\n}\n\n// Event callback.\nconst handleClick = (e, buttonData) => {\n  /*\n    \\`e\\` = browser event.\n\n    \\`buttonData\\` is your custom data.\n  */\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`// Link.\n<Button\n  buttonData={buttonData}\n  disabled={disabled}\n  href={href}\n  mode={mode}\n  size={size}\n  target={target}\n  title={title}\n\n  // Events.\n  handleClick={handleClick}\n>\n  Text and/or elements\n\n  (aka children={…})\n</Button>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`// Button.\n<Button\n  ariaControls={ariaControls}\n  buttonData={buttonData}\n  disabled={disabled}\n  mode={mode}\n  size={size}\n  title={title}\n  type={type}\n\n  // Events.\n  handleClick={handleClick}\n>\n  Text and/or elements\n\n  (aka children={…})\n</Button>\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}