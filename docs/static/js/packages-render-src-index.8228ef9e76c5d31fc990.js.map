{"version":3,"sources":["webpack:///./packages/render/src/index.js","webpack:///./packages/render/src/index.mdx"],"names":["Render","React","Component","ui","this","props","if","children","react_default","a","createElement","Fragment","defaultProps","MDXContent","_this","src_classCallCheck","src_possibleConstructorReturn","src_getPrototypeOf","call","layout","_this$props","components","_objectWithoutProperties","dist","name","id","index_m","of","parentName","className","__position","__code","__scope","src"],"mappings":"4jCAcMA,iaAAeC,IAAMC,kDAIvB,IAAIC,EAAK,KAQT,OALIC,KAAKC,MAAMC,KACbH,EAAKC,KAAKC,MAAME,UAKhBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGR,wCAeTH,EAAOY,aAAe,CACpBL,SAAU,KACVD,IAAI,GAISN,q9CC3CMa,cACnB,SAAAA,EAAYR,GAAO,IAAAS,EAAA,mGAAAC,CAAAX,KAAAS,IACjBC,EAAAE,EAAAZ,KAAAa,EAAAJ,GAAAK,KAAAd,KAAMC,KACDc,OAAS,KAFGL,yPADmBb,IAAMC,kDAKnC,IAAAkB,EAC0BhB,KAAKC,MAA9BgB,EADDD,EACCC,WAAehB,EADhBiB,EAAAF,EAAA,gBAGP,OAAOZ,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACEC,KAAK,UAELH,WAAYA,GACzBb,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYhB,MAAO,CAACoB,GAAK,aAAvD,cACAjB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYhB,MAAO,CAACoB,GAAK,UAAvD,SACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAYC,GAAI3B,IAChBQ,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYhB,MAAO,CAACoB,GAAK,UAAvD,SACAjB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,MAAMH,WAAYA,GAAYb,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,OAAOH,WAAYA,EAAYO,WAAW,MAAMvB,MAAO,CAACwB,UAAY,gBAAjF,qYAwB3CrB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYhB,MAAO,CAACoB,GAAK,SAAvD,QACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAYI,WAAY,EAAGC,OAAQ,2KAA4KC,QAAS,CAAC3B,MAAOD,KAAOA,KAAKC,MAAQA,EAAML,WACxPQ,EAAAC,EAAAC,cAACuB,EAAD,CAAQ3B,IAAI,GACVE,EAAAC,EAAAC,cAAA,uDAIFF,EAAAC,EAAAC,cAACuB,EAAD,CAAQ3B,IAAI,GACVE,EAAAC,EAAAC,cAAA","file":"static/js/packages-render-src-index.a8430f98.js","sourcesContent":["/*\n  // Used like soâ€¦\n  <Render if={this.props.bool}>\n    <p>\n      Super secret UI.\n    </p>\n  </Render>\n*/\n\n// Dependencies.\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// Define class.\nclass Render extends React.Component {\n  // Render method.\n  render () {\n    // Fallback.\n    let ui = null\n\n    // Check boolean.\n    if (this.props.if) {\n      ui = this.props.children\n    }\n\n    // Expose UI.\n    return (\n      <React.Fragment>\n        {ui}\n      </React.Fragment>\n    )\n  }\n}\n\n// Validation.\nRender.propTypes = {\n  children: PropTypes.node,\n\n  // Any \"truthy\" values.\n  if: PropTypes.any\n}\n\n// Defaults.\nRender.defaultProps = {\n  children: null,\n  if: false\n}\n\n// Export.\nexport default Render\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Render from './'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"t7render\"}}>{`@t7/render`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Render} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// ================\n// TRUTHY EXAMPLES.\n// ================\n\n<Render if={true}>\n  This renders.\n</Render>\n\n<Render if={somethingTruthy}>\n  This renders.\n</Render>\n\n// ===============\n// FALSY EXAMPLES.\n// ===============\n\n<Render if={false}>\n  This does not render.\n</Render>\n\n<Render if={0 || '' || NaN || null || undefined}>\n  This does not render.\n</Render>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"demo\"}}>{`Demo`}</MDXTag>\n<Playground __position={1} __code={'<Render if={true}>\\n  <p>A truthy condition will render this text.</p>\\n</Render>\\n<Render if={false}>\\n  <p>A falsy condition will NOT render this text.</p>\\n</Render>'} __scope={{props: this ? this.props : props,Render}}>\n  <Render if={true}>\n    <p>\n      A truthy condition will render this text.\n    </p>\n  </Render>\n  <Render if={false}>\n    <p>\n      A falsy condition will NOT render this text.\n    </p>\n  </Render>\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}